version: "3.6"
services:
  hasura:
    image: hasura/graphql-engine:v1.3.3
    ports:
    - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${DB_NAME}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
  postgres:
    container_name: colrc-v2-postgres-db
    # see https://hub.docker.com/_/postgres/
    image: postgres:12
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      # SQL scripts in this directory will be executed in alphabetical order
      - "./misc/sql:/docker-entrypoint-initdb.d"
    healthcheck:
        # https://www.postgresql.org/docs/12/app-pg-isready.html
        test: ["CMD", "pg_isready", "--dbname=$DB_NAME", "--username=$DB_USERNAME"]
        start_period: 10s
        interval: 10s
        timeout: 5s
        retries: 10
  backend:
    container_name: colrc-v2-backend
    build:
      context: ./backend
      # specify .dev or .prod variant
      dockerfile: Dockerfile.dev
      labels:
        edu.arizona.colrc.description: "API for COLRC v2"
    depends_on:
      - postgres
      - hasura
    restart: always
    ports:
      - "4000:4000"
    env_file:
      - ./.env
    environment:
      # For dev, this should just use the service name
      DB_HOST: postgres
      # used by Sequelize
      DB_DIALECT: postgres
    volumes:
      - ./backend:/app:rw
  frontend:
    container_name: colrc-v2-frontend
    build:
      context: ./frontend
      labels:
        edu.arizona.colrc.description: "Frontend for COLRC v2"
    depends_on:
      - backend
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src:rw
      - ./frontend/public:/app/public:rw
  nginx:
    container_name: nginx
    build:
      context: ./nginx
      labels:
        edu.arizona.colrc.description: "Nginx for COLRC v2"
    depends_on:
      - frontend
    restart: always
    ports:
      - "80:7777"
      - "443:7774"
    #volumes:
      # FIXME: add nginx conf and correct mapping
      #- ./conf/nginx:/app/src:rw
volumes:
  db_data: